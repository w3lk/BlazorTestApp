@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_themeManager.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="_themeManager.AppBarElevation">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3"> My Application</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Settings" OnClick="@((e) => OpenThemeManager(true))" />
        <MudIconButton Icon="@Icons.Material.Filled.DarkMode" OnClick="@((e) => ToggleDarkMode())" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="_themeManager.DrawerClipMode" Elevation="_themeManager.DrawerElevation">
        <MyNavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            @Body
        </MudContainer>
    </MudMainContent>

    <MudThemeManager Open="_themeManagerOpen" OpenChanged="OpenThemeManager" Theme="_themeManager" ThemeChanged="UpdateTheme" />
</MudLayout>

@code {

    //------- DRAWER --------
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    //-------- THEME MANAGER --------
    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
    public bool _themeManagerOpen = false;

    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = Colors.Blue.Darken4,
                Secondary = Colors.Green.Accent4,
                AppbarBackground = Colors.DeepOrange.Default,
                //Define other properties here.
            },

        };

    void OpenThemeManager(bool value)
    {
        _themeManagerOpen = value;
    }

    void UpdateTheme(ThemeManagerTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        //_themeManager.Theme = MyCustomTheme;
        _themeManager.DrawerClipMode = DrawerClipMode.Always;
        StateHasChanged();
    }

    private bool _isDarkMode;
    private void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }

}
